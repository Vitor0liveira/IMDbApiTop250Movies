{"ast":null,"code":"var _jsxFileName = \"/Users/vitoroliveira/Desktop/Projetos/Projetos Web/React-Projects/imdbmovie-frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movie() {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n\n  const fetchMovies = async () => {\n    try {\n      const response = await api.get(\"/movies\");\n      setMovie(response.data.items);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"imDbRating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: movie === null || movie === void 0 ? void 0 : movie.map(movie => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: movie.imdbID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.Year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.imdbRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.Poster,\n              alt: \"Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, movie.imdbID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Movie, \"7wu+QzjZ74tlUVCwDf4wnQTtbPA=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/vitoroliveira/Desktop/Projetos/Projetos Web/React-Projects/imdbmovie-frontend/src/components/Movie.js"],"names":["React","useState","useEffect","api","Movie","movie","setMovie","fetchMovies","response","get","data","items","error","console","log","map","imdbID","Title","Year","imdbRating","Poster"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMM,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,SAAR,CAAvB;AACAH,MAAAA,QAAQ,CAACE,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAR;AACD,KAHD,CAIA,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD;;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,2BACG;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBACGF,KADH,aACGA,KADH,uBACGA,KAAK,CAAEU,GAAP,CAAWV,KAAK,iBACf;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA,sBAAiBA,KAAK,CAACW;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKX,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKZ,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKb,KAAK,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,mCAAI;AAAK,cAAA,GAAG,EAAEd,KAAK,CAACe,MAAhB;AAAwB,cAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAASf,KAAK,CAACW,MAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AA0BD;;GA5CQZ,K;;KAAAA,K;AA8CT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\";\n\nfunction Movie() {\n\n  const [movie, setMovie] = useState(null);\n  \n  const fetchMovies = async () => {\n    try {\n      const response = await api.get(\"/movies\");\n      setMovie(response.data.items);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  return (\n   <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">imDbRating</th>\n            <th scope=\"col\">Poster</th>\n          </tr>\n        </thead>\n        <tbody>\n          {movie?.map(movie => (\n            <tr key={movie.imdbID}>\n              <th scope=\"row\">{movie.imdbID}</th>\n              <td>{movie.Title}</td>\n              <td>{movie.Year}</td>\n              <td>{movie.imdbRating}</td>\n              <td><img src={movie.Poster} alt=\"Movie\" /></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}